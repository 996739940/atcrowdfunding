<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="User">
		insert into t_user (id, loginacct, userpswd,
		username, email, createtime
		)
		values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="User">
		update t_user
		set loginacct = #{loginacct,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
	</select>

	
	
	
	<select id="getUserByLogin" resultType="User">
		select id, loginacct, userpswd, username, email, createtime
		from t_user where loginacct=#{loginacct}
	</select>
	
	
	<!-- 
		1.java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
			解决问题：?号占位符不能放在引号中。否则SQL语句解析时会将其作为普通字符处理。
		2.com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; 
			check the manual that corresponds to your MySQL server version for the right syntax to use near '+'a'+'%'; 
			解决问题：SQL语法中不能使用+号拼串的。
		3.使用${}可以进行拼串。不推荐使用。会存在安全问题。产生SQL注入问题。
		4.采用java语句来进行拼串
			if(queryText!=null) {
				paramMap.put("queryText", "%"+queryText+"%");
			}
		5.采用数据库提供专业拼串函数
	 -->
	<select id="queryUserList" resultType="User">
		select * from t_user 
		
		<where>
			<if test="queryText!=null">
				loginacct like concat('%',#{queryText},'%')
			</if>
		</where>
		
		 order by createtime desc limit #{startIndex},#{pagesize} 
	</select>

	<select id="countUser" resultType="int">
		select count(*) from t_user
		<where>
			<if test="queryText!=null">
				loginacct like concat('%',#{queryText},'%')
			</if>
		</where>
	</select>
	

	<!-- delete from t_user where id in (1,2,3); -->
	<delete id="doDeleteBatch" >
		delete from t_user where id in 
		<foreach collection="array" item="userid" open="(" close=")" separator=",">
			#{userid}
		</foreach>
	</delete>



	<delete id="doDeleteBatch2" >
		delete from t_user where id in 
		<foreach collection="list" item="userid" open="(" close=")" separator=",">
			#{userid}
		</foreach>
	</delete>



	<!-- insert into t_user_role(userid,roleid) values(1,2),(1,3),(1,4) -->
	<insert id="saveRoleAndUserRelationship">
		insert into t_user_role(userid,roleid) values
		<foreach collection="roleIds" item="roleId" separator=",">
			(#{userId},#{roleId})
		</foreach>
	</insert>

	<!-- delete from t_user_role where userid=#{userId} and roleid in (2,3,4) -->
	<delete id="deleteRoleAndUserRelationship">
		delete from t_user_role where userid=#{userId} and roleid in 
		<foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
			#{roleId}
		</foreach>
	</delete>

	



	
</mapper>